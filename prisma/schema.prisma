// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Sale      Sale[]
}

model Product {
  id            String     @id @default(uuid())
  name          String
  barcode       String     @unique
  description   String?
  price         Float
  stockQuantity Int
  category      String
  supplier      String
  expiryDate    DateTime?
  image         String? // Store image URL
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  SaleItem      SaleItem[]
}

model Sale {
  id          String      @id @default(uuid())
  userId      String
  totalPrice  Float
  paymentType PaymentType
  discount    Float?
  comment     String?
  createdAt   DateTime    @default(now())
  user        User        @relation(fields: [userId], references: [id])
  items       SaleItem[]
}

model SaleItem {
  id          String  @id @default(uuid())
  saleId      String
  productId   String
  productName String
  quantity    Int
  priceAtSale Float
  sale        Sale    @relation(fields: [saleId], references: [id])
  product     Product @relation(fields: [productId], references: [id])
}

enum Role {
  CASHIER
  SUPERVISOR
  MANAGER
  ADMIN
}

enum PaymentType {
  CASH
  CARD
  TRANSFER
  CASHCARD
  CASHTRANSFER
  CARDTRANSFER
  CASHCARDTRANSFER
}

model MusicStream {
  id         String          @id @default(uuid())
  title      String
  urlId      String
  artist     String?
  audioUrl   String @db.LongText // Store very long text in MySQL
  url        String?
  thumbnails ThumbnailItem[]
  createdAt  DateTime        @default(now())
}

model ThumbnailItem {
  id          String      @id @default(uuid())
  url         String
  urlId       String
  width       Int
  height      Int
  musicStream MusicStream @relation(fields: [urlId], references: [id])
  createdAt   DateTime    @default(now())
}
